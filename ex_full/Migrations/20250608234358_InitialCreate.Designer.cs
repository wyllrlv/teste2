// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ex_full.Data;

#nullable disable

namespace ex_full.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250608234358_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ex_full.Models.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TreinoId")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("TreinoId");

                    b.ToTable("Comentarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2025, 6, 6, 20, 43, 56, 661, DateTimeKind.Local).AddTicks(4034),
                            Texto = "Excelente treino! Senti bastante o peito trabalhando.",
                            TreinoId = 1,
                            Usuario = "Usuário Anônimo"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2025, 6, 7, 20, 43, 56, 663, DateTimeKind.Local).AddTicks(7500),
                            Texto = "Muito bom para iniciantes, recomendo!",
                            TreinoId = 1,
                            Usuario = "Usuário Anônimo"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2025, 6, 8, 15, 43, 56, 663, DateTimeKind.Local).AddTicks(7515),
                            Texto = "Poderia ter mais exercícios de tríceps.",
                            TreinoId = 1,
                            Usuario = "Usuário Anônimo"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2025, 6, 5, 20, 43, 56, 663, DateTimeKind.Local).AddTicks(7525),
                            Texto = "Treino pesado, mas muito eficiente!",
                            TreinoId = 2,
                            Usuario = "Usuário Anônimo"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2025, 6, 8, 12, 43, 56, 663, DateTimeKind.Local).AddTicks(7527),
                            Texto = "A rosca 21 é um exercício incrível!",
                            TreinoId = 2,
                            Usuario = "Usuário Anônimo"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2025, 6, 7, 20, 43, 56, 663, DateTimeKind.Local).AddTicks(7529),
                            Texto = "Treino muito pesado, quase não consegui terminar!",
                            TreinoId = 3,
                            Usuario = "Usuário Anônimo"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2025, 6, 8, 8, 43, 56, 663, DateTimeKind.Local).AddTicks(7530),
                            Texto = "Adoro treino de pernas, sempre dou meu máximo!",
                            TreinoId = 3,
                            Usuario = "Usuário Anônimo"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2025, 6, 8, 17, 43, 56, 663, DateTimeKind.Local).AddTicks(7531),
                            Texto = "O agachamento livre é o rei dos exercícios!",
                            TreinoId = 3,
                            Usuario = "Usuário Anônimo"
                        });
                });

            modelBuilder.Entity("ex_full.Models.Exercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Repeticoes")
                        .HasColumnType("int");

                    b.Property<int>("Series")
                        .HasColumnType("int");

                    b.Property<int>("TreinoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TreinoId");

                    b.ToTable("Exercicios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Supino Reto",
                            Observacoes = "Controle a descida",
                            Repeticoes = 12,
                            Series = 4,
                            TreinoId = 1
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Supino Inclinado",
                            Observacoes = "45° de inclinação",
                            Repeticoes = 10,
                            Series = 3,
                            TreinoId = 1
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Crucifixo",
                            Observacoes = "Amplitude completa",
                            Repeticoes = 12,
                            Series = 3,
                            TreinoId = 1
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Tríceps Testa",
                            Observacoes = "Cotovelos fixos",
                            Repeticoes = 15,
                            Series = 3,
                            TreinoId = 1
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Tríceps Corda",
                            Observacoes = "Extensão completa",
                            Repeticoes = 12,
                            Series = 3,
                            TreinoId = 1
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Mergulho",
                            Observacoes = "Até a falha",
                            Repeticoes = 8,
                            Series = 2,
                            TreinoId = 1
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Barra Fixa",
                            Observacoes = "Pegada pronada",
                            Repeticoes = 8,
                            Series = 4,
                            TreinoId = 2
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Remada Curvada",
                            Observacoes = "Tronco a 45°",
                            Repeticoes = 10,
                            Series = 4,
                            TreinoId = 2
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Puxada Frente",
                            Observacoes = "Peito para frente",
                            Repeticoes = 12,
                            Series = 3,
                            TreinoId = 2
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Rosca Direta",
                            Observacoes = "Sem balanço",
                            Repeticoes = 12,
                            Series = 4,
                            TreinoId = 2
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Rosca Martelo",
                            Observacoes = "Pegada neutra",
                            Repeticoes = 10,
                            Series = 3,
                            TreinoId = 2
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Rosca 21",
                            Observacoes = "7+7+7 repetições",
                            Repeticoes = 21,
                            Series = 2,
                            TreinoId = 2
                        },
                        new
                        {
                            Id = 13,
                            Nome = "Agachamento Livre",
                            Observacoes = "Profundidade completa",
                            Repeticoes = 8,
                            Series = 5,
                            TreinoId = 3
                        },
                        new
                        {
                            Id = 14,
                            Nome = "Leg Press",
                            Observacoes = "Pés na largura dos ombros",
                            Repeticoes = 15,
                            Series = 4,
                            TreinoId = 3
                        },
                        new
                        {
                            Id = 15,
                            Nome = "Extensora",
                            Observacoes = "Pausa no topo",
                            Repeticoes = 12,
                            Series = 3,
                            TreinoId = 3
                        },
                        new
                        {
                            Id = 16,
                            Nome = "Flexora",
                            Observacoes = "Contração isométrica",
                            Repeticoes = 12,
                            Series = 3,
                            TreinoId = 3
                        },
                        new
                        {
                            Id = 17,
                            Nome = "Panturrilha em Pé",
                            Observacoes = "Amplitude completa",
                            Repeticoes = 20,
                            Series = 4,
                            TreinoId = 3
                        },
                        new
                        {
                            Id = 18,
                            Nome = "Panturrilha Sentado",
                            Observacoes = "Pausa na contração",
                            Repeticoes = 15,
                            Series = 3,
                            TreinoId = 3
                        });
                });

            modelBuilder.Entity("ex_full.Models.Treino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Avaliacao")
                        .HasColumnType("float");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Treinos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Avaliacao = 4.5,
                            Descricao = "Treino focado no desenvolvimento dos músculos peitorais e tríceps, ideal para iniciantes e intermediários. Concentre-se na execução correta dos movimentos.",
                            Titulo = "Treino de Peito e Tríceps"
                        },
                        new
                        {
                            Id = 2,
                            Avaliacao = 4.7999999999999998,
                            Descricao = "Sessão completa para fortalecimento das costas e bíceps. Foque na conexão mente-músculo para máximos resultados.",
                            Titulo = "Treino de Costas e Bíceps"
                        },
                        new
                        {
                            Id = 3,
                            Avaliacao = 4.2000000000000002,
                            Descricao = "Treino intenso para membros inferiores. Prepare-se para um dos treinos mais desafiadores, mas também mais recompensadores.",
                            Titulo = "Treino de Pernas"
                        });
                });

            modelBuilder.Entity("ex_full.Models.Comentario", b =>
                {
                    b.HasOne("ex_full.Models.Treino", "Treino")
                        .WithMany("Comentarios")
                        .HasForeignKey("TreinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Treino");
                });

            modelBuilder.Entity("ex_full.Models.Exercicio", b =>
                {
                    b.HasOne("ex_full.Models.Treino", "Treino")
                        .WithMany("Exercicios")
                        .HasForeignKey("TreinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Treino");
                });

            modelBuilder.Entity("ex_full.Models.Treino", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Exercicios");
                });
#pragma warning restore 612, 618
        }
    }
}
